name: Build Multi-Platform Binaries

on:
  push:
    branches: [ master, main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ master, main ]
  workflow_dispatch:

env:
  GO_VERSION: '1.23'
  APP_NAME: 'endpoint_forwarder'

jobs:
  build:
    name: Build for ${{ matrix.os }}-${{ matrix.arch }}
    runs-on: ${{ matrix.runner }}
    
    strategy:
      matrix:
        include:
          # Windows builds
          - os: windows
            arch: amd64
            runner: windows-latest
            ext: '.exe'
            
          - os: windows
            arch: arm64
            runner: windows-latest
            ext: '.exe'
            
          # macOS builds
          - os: darwin
            arch: amd64
            runner: macos-latest
            ext: ''
            
          - os: darwin
            arch: arm64
            runner: macos-latest
            ext: ''
            
          # Linux builds
          - os: linux
            arch: amd64
            runner: ubuntu-latest
            ext: ''
            
          - os: linux
            arch: arm64
            runner: ubuntu-latest
            ext: ''
            
          - os: linux
            arch: arm
            runner: ubuntu-latest
            ext: ''

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Get dependencies
      run: go mod download

    - name: Run tests
      run: go test -v ./...

    - name: Build binary
      env:
        GOOS: ${{ matrix.os }}
        GOARCH: ${{ matrix.arch }}
        CGO_ENABLED: 0
      run: |
        go build -ldflags="-s -w -X main.version=${{ github.ref_name }} -X main.commit=${{ github.sha }} -X main.date=$(date -u +%Y-%m-%dT%H:%M:%SZ)" -o ${{ env.APP_NAME }}-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.ext }} .

    - name: Create archive (Windows)
      if: matrix.os == 'windows'
      run: |
        7z a ${{ env.APP_NAME }}-${{ matrix.os }}-${{ matrix.arch }}.zip ${{ env.APP_NAME }}-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.ext }} config/example.yaml README.md

    - name: Create archive (Unix)
      if: matrix.os != 'windows'
      run: |
        tar -czf ${{ env.APP_NAME }}-${{ matrix.os }}-${{ matrix.arch }}.tar.gz ${{ env.APP_NAME }}-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.ext }} config/example.yaml README.md

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.APP_NAME }}-${{ matrix.os }}-${{ matrix.arch }}
        path: |
          ${{ env.APP_NAME }}-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.ext }}
          ${{ env.APP_NAME }}-${{ matrix.os }}-${{ matrix.arch }}.*
        retention-days: 30

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./artifacts

    - name: Prepare release assets
      run: |
        mkdir -p ./release
        find ./artifacts -name "*.zip" -o -name "*.tar.gz" | xargs -I {} cp {} ./release/
        ls -la ./release

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: ./release/*
        draft: false
        prerelease: false
        generate_release_notes: true
        body: |
          ## Claude Request Forwarder ${{ github.ref_name }}
          
          ### 📦 下载说明
          
          请根据您的操作系统下载对应的版本：
          
          - **Windows**: `endpoint_forwarder-windows-amd64.zip` (64位) 或 `endpoint_forwarder-windows-arm64.zip` (ARM64)
          - **macOS**: `endpoint_forwarder-darwin-amd64.tar.gz` (Intel) 或 `endpoint_forwarder-darwin-arm64.tar.gz` (Apple Silicon)
          - **Linux**: `endpoint_forwarder-linux-amd64.tar.gz` (64位) 或 `endpoint_forwarder-linux-arm64.tar.gz` (ARM64) 或 `endpoint_forwarder-linux-arm.tar.gz` (ARM32)
          
          ### 🚀 快速开始
          
          1. 下载适合您系统的压缩包
          2. 解压文件
          3. 复制 `example.yaml` 为 `config.yaml` 并根据需要修改配置
          4. 运行程序: `./endpoint_forwarder -config config.yaml`
          
          ### 📋 版本信息
          
          - **版本**: ${{ github.ref_name }}
          - **提交**: ${{ github.sha }}
          - **构建时间**: ${{ github.event.head_commit.timestamp }}
          
          查看更多信息请参阅 [README.md](README.md)
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}